#!/usr/bin/env python
# coding: utf-8

# # Сравнение музыкальных предпочтений пользователей Москвы и Петербурга

# **Цель исследования** — проверить три гипотезы:
# 1. Активность пользователей зависит от дня недели. В Москве и Петербурге это проявляется по-разному.
# 2. В понедельник утром и в пятницу вечером в разных городах преобладают разные жанры. 
# 3. Москва и Петербург предпочитают разные жанры музыки. В Москве чаще слушают поп-музыку, в Петербурге — русский рэп.
# 
# **Ход исследования:**
# 
# 1. Обзор данных.
# 2. Предобработка данных.
# 3. Проверка гипотез.

# ## Обзор данных

# In[1]:


# импорт библиотеки pandas
import pandas as pd


# In[2]:


# чтение файла с данными и сохранение в df
df = pd.read_csv('yandex_music_project.csv')


# In[4]:


# получение первых 10 строк таблицы df
df.head(10)


# In[5]:


# получение общей информации о данных в таблице df
df.info()


# Тип данных во всех столбцах — `object`.    
# Количество значений в столбцах различается. Значит, в данных есть пропущенные значения.

# В названиях колонок видны нарушения стиля:
# * Строчные буквы сочетаются с прописными
# * Встречаются пробелы
# * Нет змеиного регистра

# **Вывод** 
# 
# Предварительно можно утверждать, что данных достаточно для проверки гипотез. Но встречаются пропуски в данных, а в названиях колонок — расхождения с хорошим стилем.
# 
# Нужно обработать данные.

# ## Предобработка данных

# In[6]:


# перечень названий столбцов таблицы df
df.columns


# In[7]:


# переименование столбцов
df = df.rename(columns={'  userID':'user_id', 'Track':'track', '  City  ':'city', 'Day':'day'})


# In[8]:


# проверка результатов - перечень названий столбцов
df.columns


# In[9]:


# подсчёт пропусков
df.isna().sum()


# In[10]:


# перебор названий столбцов в цикле и замена пропущенных значений на 'unknown'
columns_to_replace = ['track', 'artist', 'genre']
for col in columns_to_replace:
    df[col] = df[col].fillna('unknown')


# In[11]:


# подсчёт пропусков
df.isna().sum()


# In[12]:


# подсчёт явных дубликатов
df.duplicated().sum()


# In[13]:


# удаление явных дубликатов
df = df.drop_duplicates()


# In[14]:


# проверка на отсутствие дубликатов
df.duplicated().sum()


# In[15]:


# Просмотр уникальных названий жанров
df_sort = df['genre'].sort_values()
df_sort = df_sort.unique()
print(df_sort)


# In[16]:


# Устранение неявных дубликатов
duplicates = ['hip', 'hop', 'hip-hop']
name = 'hiphop'

df['genre'] = df['genre'].replace(duplicates, name)


# In[17]:


# Проверка на неявные дубликаты
print(df['genre'].sort_values().unique())


# **Вывод**
# 
# Предобработка обнаружила три проблемы в данных:
# 
# - нарушения в стиле заголовков
# - пропущенные значения
# - дубликаты — явные и неявные
# 
# Теперь можно перейти к проверке гипотез. 

# ## Проверка гипотез

# ### Зависимость активности от дня недели

# In[18]:


# Подсчёт прослушиваний в каждом городе
df.groupby('city')['user_id'].count()


# В Москве прослушиваний больше, чем в Петербурге. Из этого следует, что самих пользователей в Москве больше.

# In[19]:


# Подсчёт прослушиваний в каждый из трёх дней
df.groupby('day')['user_id'].count()


# Пользователи из двух городов менее активны по средам. Но всё может измениться, если рассмотреть каждый город в отдельности.

# In[20]:


# Создание функции number_tracks()
def number_tracks(day, city):
    track_list = df[(df['day'] == day)&(df['city'] == city)]
    track_list_count = track_list['user_id'].count() 
    return track_list_count 


# In[21]:


# Количество прослушиваний в Москве по понедельникам
number_tracks('Monday', 'Moscow')


# In[22]:


# Количество прослушиваний в Санкт-Петербурге по понедельникам
number_tracks('Monday', 'Saint-Petersburg')


# In[23]:


# Количество прослушиваний в Москве по средам
number_tracks('Wednesday', 'Moscow')


# In[24]:


# Количество прослушиваний в Санкт-Петербурге по средам
number_tracks('Wednesday', 'Saint-Petersburg')


# In[25]:


# Количество прослушиваний в Москве по пятницам
number_tracks('Friday', 'Moscow')


# In[26]:


# Количество прослушиваний в Санкт-Петербурге по пятницам
number_tracks('Friday', 'Saint-Petersburg')


# In[27]:


# Таблица с результатами
data = [
    ['Moscow', 15740, 11056, 15945],
    ['Saint-Petersburg', 5614, 7003, 5895]
]
columns = ['city', 'monday', 'wednesday', 'friday']
table = pd.DataFrame(data = data, columns = columns)


# **Вывод**
# 
# - В Москве пик прослушиваний приходится на понедельник и пятницу, а в среду заметен спад.
# - В Петербурге, наоборот, больше слушают музыку по средам. Активность в понедельник и пятницу здесь почти в равной мере уступает среде.

# ### Преобладание жанров в начале и в конце недели

# In[28]:


# получение таблицы moscow_general для Москвы
moscow_general = df[df['city'] == 'Moscow']


# In[29]:


# получение таблицы spb_general для Петербурга
spb_general = df[df['city'] == 'Saint-Petersburg']


# In[30]:


# Создание функции genre_weekday()
def genre_weekday(df, day, time1, time2):
    genre_df = df[(df['day'] == day)&(df['time'] < time2)&(df['time'] > time1)]
    genre_df_grouped = genre_df.groupby('genre')['genre'].count()
    genre_df_sorted = genre_df_grouped.sort_values(ascending=False)
    return genre_df_sorted[:10]


# Cравнение результатов функции genre_weekday() для Москвы и Санкт-Петербурга в понедельник утром (с 7:00 до 11:00) и в пятницу вечером (с 17:00 до 23:00):

# In[31]:


# Вызов функции для утра понедельника в Москве
genre_weekday(moscow_general, 'Monday', '07:00', '11:00')


# In[32]:


# Вызов функции для утра понедельника в Петербурге
genre_weekday(spb_general, 'Monday', '07:00', '11:00')


# In[33]:


# Вызов функции для вечера пятницы в Москве
genre_weekday(moscow_general, 'Friday', '17:00', '23:00')


# In[34]:


# Вызов функции для вечера пятницы в Петербурге
genre_weekday(spb_general, 'Friday', '17:00', '23:00')


# **Вывод**
# 
# 1. В Москве и Петербурге слушают похожую музыку. Единственное отличие — в московский рейтинг вошёл жанр “world”, а в петербургский — джаз и классика.
# 
# 2. В Москве пропущенных значений оказалось так много, что значение `'unknown'` заняло десятое место среди самых популярных жанров. Значит, пропущенные значения занимают существенную долю в данных и угрожают достоверности исследования.

# ### Жанровые предпочтения в Москве и Петербурге

# In[35]:


# Группировка таблицы по жанру, подсчёт прослушиваний треков каждого жанра и сортировка результата в порядке убывания
moscow_genres = moscow_general.groupby('genre')['genre'].count().sort_values(ascending=False)


# In[36]:


# Просмотр первых 10 строк moscow_genres
moscow_genres.head(10)


# In[37]:


# Группировка таблицы по жанру, подсчёт прослушиваний треков каждого жанра и сортировка результата в порядке убывания
spb_genres = spb_general.groupby('genre')['genre'].count().sort_values(ascending=False)


# In[38]:


# Просмотр первых 10 строк spb_genres
spb_genres.head(10)


# **Вывод:**
# 
# 1. Поп-музыка — самый популярный жанр в Москве, как и предполагала гипотеза. Более того, в топ-10 жанров встречается близкий жанр — русская популярная музыка.
# 2. Рэп одинаково популярен в Москве и Петербурге.

# ## Итоги исследования

# 1. День недели по-разному влияет на активность пользователей в Москве и Петербурге. 
# 2. Музыкальные предпочтения не сильно меняются в течение недели — независимо от города. Небольшие различия заметны в начале недели, по понедельникам:
# * в Москве слушают музыку жанра “world”
# * в Петербурге — джаз и классику.
# 3. Во вкусах пользователей Москвы и Петербурга больше общего, чем различий. Педпочтения жанров в Петербурге напоминают предпочтения в Москве.

# In[ ]:




